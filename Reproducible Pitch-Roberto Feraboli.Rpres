Reproducible Pitch-Roberto Feraboli
========================================================
author: Roberto Feraboli
date: 
autosize: true

Overview
========================================================

This is the final assignment for the  developing data products course. I have created a shiny app and deployed on the shiny server as requested. The link is <https://rf86.shinyapps.io/APPNAME/>

The code can be found at <https://github.com/ferax86/Course-Project-Shiny-Application-and-Reproducible-Pitch>


Iris Dataset
========================================================
The iris dataset gives the measurements in centimeters of the variables sepal length and width and petal length and width, respectively, for 50 flowers from each of 3 species of iris. The species are Iris setosa, versicolor, and virginica.


Analysis
========================================================
I created a shiny app showing the following features :
1) the summary of the iris dataset
2) the structure of the iris dataset
3) a possible filter of one of the iris columns 
4) the histogram of the iris dataset

ui Code
========================================================
```{r}
library(shiny)
shinyUI(fluidPage(
  titlePanel(title=h4("Anlysis Iis dataset",align="center")),
  sidebarLayout(

  sidebarPanel(
    selectInput("var","1.Select the variable from iris dataset",choices = c("Sepal.Length"=1,
                "Sepal.Width"=2,"Petal.Length"=3,"Petal.Width"=4)),
                br(),
    sliderInput("bins", "2.Select numbr of bins for histogram", min=5, max=25, value = 15),            
                br(),
    radioButtons("color","3.Select the colour of histogram",choices = c("Green","Red","Yellow"),selected="Green")
                
  ),
  
  mainPanel(
    tabsetPanel(type="tab",
                tabPanel("Summary",verbatimTextOutput("sum")),
                tabPanel("Structure",verbatimTextOutput("str")),
                tabPanel("Data",tableOutput("data")),
                tabPanel("Plot",plotOutput("myhist"))
                )   
        
  )
  )
)  
)
  
```
server Code
========================================================
```{r}
library(shiny)

shinyServer(
  function(input, output) {
    
    colm<-reactive({
        as.numeric(input$var)
        
        
    })  
      
      
    output$sum<-renderPrint({
          summary(iris)
      })   
      
      
      
    output$str<-renderPrint({
    str(iris)
    }) 
      
    output$data<-renderTable({
    iris[colm()] 
   
       
       
   })  
      
    output$myhist<-renderPlot({
    
    hist(iris[,colm()],breaks=seq(0,max(iris[,colm()]),l=input$bins+1),
    col=input$color,main="Histogram of Iris Dataset",xlab=names(iris[colm()]))
    
    
  })
  }
)

```
